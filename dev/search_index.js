var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Modules","page":"API","title":"Modules","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:module]","category":"page"},{"location":"api/#Types-and-constants","page":"API","title":"Types and constants","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:type, :constant]","category":"page"},{"location":"api/#Functions-and-macros","page":"API","title":"Functions and macros","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:macro, :function]","category":"page"},{"location":"api/#Documentation","page":"API","title":"Documentation","text":"","category":"section"},{"location":"api/#LegendOpticalFits.OpticalMap","page":"API","title":"LegendOpticalFits.OpticalMap","text":"OpticalMap ≡ NamedTuple of 3D histograms keyed by channel Symbol\n\nHandy type alias for LEGEND optical maps, i.e. three-dimensional histograms for each SiPM channel. The field names are the channel symbols (e.g. :S030).\n\n\n\n\n\n","category":"type"},{"location":"api/#LegendOpticalFits._λ0_model_bulk_ops-Tuple{AbstractVector{<:Number}, AbstractMatrix{<:Number}, AbstractMatrix{<:Number}, AbstractArray{<:Number, 3}}","page":"API","title":"LegendOpticalFits._λ0_model_bulk_ops","text":"_λ0_model_bulk_ops()\n\nLow-level implementation of λ0_model using bulk array programming, Reactant / CUDA compatible.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits._λ0_model_loops-Tuple{AbstractVector{<:AbstractFloat}, AbstractMatrix{<:AbstractFloat}, AbstractMatrix{Bool}}","page":"API","title":"LegendOpticalFits._λ0_model_loops","text":"_λ0_model_loops()\n\nLow-level implementation of λ0_model using for loops.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.ar39_beta_energy_dist-Tuple{}","page":"API","title":"LegendOpticalFits.ar39_beta_energy_dist","text":"ar39_beta_energy_dist() -> MixtureModel{Uniform}\n\nEnergy distribution of the beta particle emitted in an Ar-39 nuclear decay.\n\nReturn a continuous probability distribution for the beta decay spectrum of Ar-39. The distribution is constructed from tabulated values from the IAEA BetaShape database, downloadable at this link.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.detection_prob-Tuple{Any, Vararg{Any}}","page":"API","title":"LegendOpticalFits.detection_prob","text":"detection_prob(h, coords...)\n\nReturn the bin content of histogram h at the given coordinates coords (with units). Coordinates must be inside the histogram bounds, otherwise an error is thrown.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.detection_prob_vov-NTuple{4, Any}","page":"API","title":"LegendOpticalFits.detection_prob_vov","text":"detection_prob_bcast(h, xss, yss, zss)\n\nApply [detection_prob_event] to each triple of vectors (xs, ys, zs) from (xss, yss, zss).\n\nThis is useful when xss, yss, and zss are VectorOfVectors, e.g. the coordinates of all hits for many events. Returns a vector of vectors of bin contents.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.load_optical_map-Tuple{AbstractString, Tuple{LegendDataManagement.DataPeriodLike, Union{LegendDataManagement.DataRun, AbstractString, Symbol}}}","page":"API","title":"LegendOpticalFits.load_optical_map","text":"load_optical_map(filename, runsel) -> OpticalMap\n\nLoad a LEGEND-200 optical map from file.\n\nExamples\n\nload_optical_map(\"./optmap.lh5\", (:p13, :r001))\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.log_p0_nominal-Tuple{TypedTables.Table, NamedTuple{names, T} where {names, T<:Tuple{Vararg{StatsBase.Histogram{<:AbstractFloat, 3}}}}}","page":"API","title":"LegendOpticalFits.log_p0_nominal","text":"log_p0_nominal(sim_data, optical_map; ...)\n\nLogarithm of no-light-probability for events simulated by remage.\n\nThis can be used to compute inputs for λ0_model.\n\nArguments\n\nsim_data: output table (stepping data) for a scintillation detector (the same the optical map refers to) from remage. Must contain the fields xloc, yloc, zloc and edep.\noptmap: liquid argon optical map as loaded by load_optical_map.\nn_events: number of Ar-39 decays to simulate.\nlight_yield: liquid argon scintillation yield.\n\nReturns\n\nA table of log(p0) for each channel (columns) and event (rows).\n\nExamples\n\n# load an optical map\noptmap = load_optical_map(\"map.lh5\", (:p13, :r001))\n\n# load some remage simulation data\nsim_data = lh5open(\"th228.lh5\") do h5\n    return h5[\"stp/lar\"][:]\nend\n\n# call the function\nlog_p0_nominal(sim_data, optmap)\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.log_p0_nominal_ar39-Tuple{NamedTuple{names, T} where {names, T<:Tuple{Vararg{StatsBase.Histogram{<:AbstractFloat, 3}}}}, Integer}","page":"API","title":"LegendOpticalFits.log_p0_nominal_ar39","text":"log_p0_nominal_ar39(optical_map, n_events; ...)\n\nLogarithm of no-light-probability for simulated Ar-39 events.\n\nUses the energy distribution of the beta particle emitted in the decay of an Ar-39 nucleus and the detection probability in liquid argon (through the optical map) to estimate the probability of seeing no light for a set of random events. This can be used to compute inputs for λ0_model.\n\nArguments\n\noptmap: liquid argon optical map as loaded by load_optical_map.\nn_events: number of Ar-39 decays to simulate.\nlight_yield: liquid argon scintillation yield.\nrand_voxel_kwargs...: optional keyword arguments forwarded to rand_voxel.\n\nReturns\n\nA table of log(p0) for each channel (columns) and event (rows).\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.make_efficiencies_prior-Tuple{Any}","page":"API","title":"LegendOpticalFits.make_efficiencies_prior","text":"make_efficiencies_prior(channels)\n\nConstruct a hierarchical prior for channels efficiencies.\n\na global hyperprior scale ~ Beta(7, 5) sets the typical efficiency scale.\neach channel efficiency has a Beta prior with mean scale * shift and concentration concentration, enforcing positivity and preference for lower values.\n\nArguments\n\nchannels: A list of channel names.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.make_λ0_likelihood-Tuple{TypedTables.Table, TypedTables.Table, TypedTables.Table}","page":"API","title":"LegendOpticalFits.make_λ0_likelihood","text":"make_λ0_likelihood(x0, log_p0_nominal, x0_random_coin; multiplicity_thr=0, n_rands=10, smear_factor=0, device=CPUDevice()) -> DensityFunction\n\nConstruct the likelihood of no-light fractions per channel.\n\nWe model the fraction of events with no detected light (λ0) as follows:\n\nFor each channel, the expected no-light probability λ0_model comes from the simulation (log_p0_nominal) combined with random coincidences (x0_random_coin) and scaled by per-channel efficiencies (the parameters of the model).\nThe observed no-light fraction in data is λ0_data = N0 / N_data, where N0 is the number of no-light events passing a multiplicity threshold.\nSince N_data is large, the binomial distribution N0 ~ Binomial(N_data, λ0_model) can be approximated by a normal distribution: λ0_data ~ Normal(μ = λ0_model, σ² = λ0_model (1 - λ0_model) / N_data).\n\nThe likelihood is the sum of log-probabilities across all channels.\n\nArguments\n\nx0: observed no-light indicators from data events.\nlog_p0_nominal: logarithm of the probability to see no light for each (event, channel), typically from simulations.\nx0_random_coin: observed no-light indicators from random coincidence events.\nmultiplicity_thr: discard events with multiplicity below this threshold (optional, defaults to 0).\nn_rands: average forward model results over this amount of random numbers.\nsmear_factor: the width of the likelihood gaussian terms is increased by a factor smear_factor * mean.\ndevice: on which device to run the computation of the forward model. (default CPUDevice())\n\nExamples\n\nGet some data:\n\nusing LegendOpticalFits\n\nrunsel = (:p13, :r001)\nnev_sim = 10_000\nnev_data = 1_000\nmultiplicity_thr = 6\n\noptmap = load_optical_map(\"./optmap-p13.lh5\", runsel)\nlog_p0 = log_p0_nominal_ar39(optmap, nev_sim)\n\nx0 = x0_data(\"l200-p13-r001-ath-tier_evt.lh5\", runsel, max_events=nev_data)\nx0_rc = x0_data(\"l200-p13-r001-ant-tier_evt.lh5\", runsel, max_events=nev_sim)\n\nBuild the likelihood (on the CPU by default):\n\nlogl = make_λ0_likelihood(x0, lp0, x0_rc, multiplicity_thr=multiplicity_thr)\n\nCUDA via Reactant/XLA:\n\nusing Reactant\nReactant.set_default_backend(\"cuda\")\n\nlogl = make_λ0_likelihood(x0, lp0, x0_rc, multiplicity_thr=multiplicity_thr, device=ReactantDevice())\n\nReturns\n\nA DensityFunction object representing the log-likelihood. It can be called with a parameter set.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.rand_voxel-Tuple{NamedTuple{names, T} where {names, T<:Tuple{Vararg{StatsBase.Histogram{<:AbstractFloat, 3}}}}}","page":"API","title":"LegendOpticalFits.rand_voxel","text":"rand_voxel(optmap::OpticalMap; xrange = nothing, yrange = nothing, zrange = nothing) -> (ix, iy, iz)\n\nSample a random valid voxel (bin indices) from an OpticalMap.\n\nThe function draws random voxel indices (ix, iy, iz) within the histogram domain of the optical map. The histogram of the first channel is used to determine the geometry (all channels share the same dimensions).\n\nArguments\n\noptmap: optical map (see load_optical_map.\nxrange, yrange, zrange: optional (min,max) in axis units.   If nothing (default), the full axis range is used.\n\nReturns\n\nTuple (ix, iy, iz) of voxel indices.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.x0_data-Tuple{AbstractString, Tuple{LegendDataManagement.DataPeriodLike, Union{LegendDataManagement.DataRun, AbstractString, Symbol}}}","page":"API","title":"LegendOpticalFits.x0_data","text":"x0_data(filename, runsel; ...) -> Table\n\nLoad x0 values from LEGEND-200 SiPM data.\n\nFor each event and channel, this function records whether no photon above the high photoelectron threshold was detected within the [-1, 5] μs coincidence window. The output is a Table where each column corresponds to a SiPM channel and each row to an event.\n\nArguments\n\nfilename: path to the pygama LH5 file containing event-tier data.\nrunsel: (period, run) identifier, used to select the proper channel map.\nmax_events: (optional) maximum number of events to read, default 10_000.\n\nReturns\n\na Table of booleans with dimensions (max_events, n_channels). each entry is true if no qualifying photon was observed, false otherwise.\n\nExamples\n\nx0_data(\"l200-p13-r003-anp-20241217T094846Z-tier_evt.lh5\", (:p13, :r003))\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.λ0_data-Tuple{TypedTables.Table}","page":"API","title":"LegendOpticalFits.λ0_data","text":"λ0_data(x0; multiplicity_thr=0) -> NamedTuple\n\nCompute per–channel no-light fractions from a boolean Table of events.\n\nArguments\n\nx0: a Table where each column corresponds to a channel and each row to an event; entries are Bool indicating whether no qualifying photon was observed in the channel.\nmultiplicity_thr: minimum number of channels with light per event required for the event to be considered. Defaults to 0.\n\nReturns\n\nA NamedTuple with one field per channel containing the fraction of selected events in which that channel had no light, and the total number of events passing the multiplicity threshold.\n\n\n\n\n\n","category":"method"},{"location":"api/#LegendOpticalFits.λ0_model-Tuple{NamedTuple, TypedTables.Table, TypedTables.Table}","page":"API","title":"LegendOpticalFits.λ0_model","text":"λ0_model(efficiencies, log_p0_nominal, x0_random_coin[, multiplicity_thr])\n\nExpected fraction of events in which a SiPM channel sees no light.\n\nComputes the expected fraction by looping over the rows (events) in log_p0_nominal. It samples the expected light/no-light observable by combining the probability to see no light p0 with the random coincidence data (at the same row index). If a multiplicity threshold is specified, events with lower multiplicity are discarded.\n\nArguments\n\nAll input data is keyed by detector name (a symbol)\n\nefficiencies: scaling factors for each SiPM channel.\nlog_p0_nominal: logarithm of the probability to see no light for each (event, channel), typically from simulations.\nx0_random_coin: presence of light from random coincidences for each (event, channel). This is typically coming from a measurement.\nmultiplicity_thr: discard events with multiplicity below this threshold (optional, defaults to 0).\nn_rands: average forward model results over this amount of random numbers.\n\nReturns\n\nVector of expectation values for each channel, ordered as the input data structures.\n\n\n\n\n\n","category":"method"},{"location":"LICENSE/#LICENSE","page":"LICENSE","title":"LICENSE","text":"","category":"section"},{"location":"LICENSE/","page":"LICENSE","title":"LICENSE","text":"using Markdown\nMarkdown.parse_file(joinpath(@__DIR__, \"..\", \"..\", \"LICENSE\"))","category":"page"},{"location":"#LegendOpticalFits.jl","page":"Home","title":"LegendOpticalFits.jl","text":"","category":"section"}]
}
